-- Table: Products
CREATE TABLE Products (
    ProductID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ProductName VARCHAR2(100) NOT NULL,
    Category VARCHAR2(50) NOT NULL,
    Price NUMBER(10,2) CHECK (Price > 0),
    StockQuantity NUMBER DEFAULT 0 CHECK (StockQuantity >= 0)
);

-- Table: Customers
CREATE TABLE Customers (
    CustomerID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FirstName VARCHAR2(50) NOT NULL,
    LastName VARCHAR2(50) NOT NULL,
    Email VARCHAR2(100) UNIQUE NOT NULL,
    Phone VARCHAR2(15)
);

-- Table: Orders
CREATE TABLE Orders (
    OrderID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CustomerID NUMBER NOT NULL,
    OrderDate DATE DEFAULT SYSDATE,
    TotalAmount NUMBER(10,2) DEFAULT 0 CHECK (TotalAmount >= 0),
    CONSTRAINT fk_customer FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- Table: OrderDetails
CREATE TABLE OrderDetails (
    OrderDetailID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    OrderID NUMBER NOT NULL,
    ProductID NUMBER NOT NULL,
    Quantity NUMBER CHECK (Quantity > 0),
    CONSTRAINT fk_order FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    CONSTRAINT fk_product FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- Insert Data: Products
INSERT INTO Products (ProductName, Category, Price, StockQuantity) VALUES ('Laptop Pro 15', 'Laptops', 75000, 25);
INSERT INTO Products (ProductName, Category, Price, StockQuantity) VALUES ('Noise Cancelling Headphones', 'Accessories', 3500, 15);

-- Insert Data: Customers
INSERT INTO Customers (FirstName, LastName, Email, Phone) VALUES ('Aden', 'Joe', 'aden.joe@email.com', '9876543210');
INSERT INTO Customers (FirstName, LastName, Email, Phone) VALUES ('Maya', 'Sharma', 'maya.sharma@email.com', '9123456789');

-- Insert Data: Orders
INSERT INTO Orders (CustomerID, OrderDate, TotalAmount) VALUES (1, SYSDATE, 78500);
INSERT INTO Orders (CustomerID, OrderDate, TotalAmount) VALUES (2, SYSDATE, 3500);

-- Insert Data: OrderDetails
INSERT INTO OrderDetails (OrderID, ProductID, Quantity) VALUES (1, 1, 1);
INSERT INTO OrderDetails (OrderID, ProductID, Quantity) VALUES (1, 2, 1);
INSERT INTO OrderDetails (OrderID, ProductID, Quantity) VALUES (2, 2, 1);

-- Query: Low Stock Products
SELECT ProductName, StockQuantity
FROM Products
WHERE StockQuantity < 20;

-- Query: Customer Total Spending
SELECT c.FirstName || ' ' || c.LastName AS CustomerName,
       SUM(o.TotalAmount) AS TotalSpent
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.FirstName, c.LastName;

-- Query: Update Product Stock
UPDATE Products p
SET StockQuantity = StockQuantity - (
    SELECT SUM(od.Quantity)
    FROM OrderDetails od
    WHERE od.ProductID = p.ProductID
)
WHERE ProductID IN (SELECT ProductID FROM OrderDetails);

COMMIT;
